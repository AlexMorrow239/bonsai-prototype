@use "@/styles/abstracts" as *;

.sidebar {
  height: 100%;
  @include flex(column, flex-start, stretch);
  position: relative;
  width: var(--sidebar-collapsed-width);
  transition: width var(--sidebar-transition);
  background-color: var(--color-background-alt);
  overflow: hidden;

  &__header {
    @include flex(row, flex-start, center);
    height: var(--sidebar-header-height);
    padding: var(--spacing-4);
    gap: var(--spacing-2);
    flex-shrink: 0;
  }

  &__toggle,
  &__pin {
    max-width: 32px;
    max-height: 32px;
    min-width: 32px;
    min-height: 32px;
    padding: 8px;
    border-radius: 50%;
    background-color: var(--color-background);
    @include flex(row, center, center);

    &:hover {
      background-color: var(--color-background-bold);
    }

    &.is-pinned::after {
      content: "";
      position: absolute;
      inset: -2px;
      border: 2px solid var(--color-primary);
      border-radius: inherit;
      opacity: 0.5;
    }
  }

  &__toggle-chevron {
    transition: transform var(--sidebar-transition);
  }

  &__content {
    position: absolute;
    top: var(--sidebar-header-height);
    left: 0;
    bottom: 0;
    width: var(--sidebar-width);
    background-color: var(--color-background-alt);
    overflow-y: auto;
    transition:
      transform var(--sidebar-transition),
      visibility var(--sidebar-transition);
  }

  // Collapsed state
  &.collapsed {
    width: var(--sidebar-collapsed-width);

    .sidebar__content {
      transform: translateX(-100%);
      visibility: hidden;
    }

    .sidebar__pin {
      display: none;
    }

    .sidebar__toggle-chevron {
      transform: rotate(0deg);
    }
  }

  // Expanded state
  &.expanded {
    width: var(--sidebar-width);

    .sidebar__content {
      transform: translateX(0);
      visibility: visible;
    }

    .sidebar__pin {
      display: flex;
    }

    .sidebar__toggle-chevron {
      transform: rotate(180deg);
    }
  }
}
